// ---------------------------------------------------------- 
// List groups
// ----------------------------------------------------------
$list-group-text-color:           var(--list-group-text, CanvasText) !default;
$list-group-background-color:     var(--list-group-bg, Canvas) !default;
$list-group-dt-font-weight:       var(--dt-fw, 500) !default;
$list-group-dt-background-color:  var(--list-group-dt-bg, color-mix(in srgb, CanvasText 8%, Canvas)) !default;
$list-links-background-hover:     var(--list-group-hover, color-mix(in srgb, CanvasText 4%, Canvas)) !default;
$list-group-padding-block:        var(--list-group-py, 0.5rem) !default;
$list-group-padding-inline:       var(--list-group-px, 0.75rem) !default;
$list-group-border-color:         var(--list-group-bd-color, color-mix(in srgb, CanvasText 13%, Canvas)) !default;
$list-group-radius:               var(--list-group-radius, 0.188rem) !default;
$list-group-inner-radius:         calc($list-group-radius - 1px) !default;

@mixin list-groups-css {

:where(.list-group, .list-links) {
  color: $list-group-text-color;
  max-inline-size: var(--list-group-width);
  border: 1px solid $list-group-border-color;
  border-radius: $list-group-radius;
  background-color: $list-group-background-color;
}

:where(.list-group, .list-links):is(ul, ol) {
  list-style-type: "";
  padding-inline-start: 0;
}

:where(.list-group, .list-links) dd {
  margin-inline-start: 0;
}

:where(.list-group, .list-links) :is(li, dd):not(:last-child) {
  border-block-end: 1px solid $list-group-border-color;
}

:where(.list-group :is(li, dt, dd), .list-links dt) {
  padding-block: $list-group-padding-block;
  padding-inline: $list-group-padding-inline;
}

:where(.list-group, .list-links) dt {
  font-weight: $list-group-dt-font-weight;
  border-block-end: 1px solid $list-group-border-color;
  background-color: $list-group-dt-background-color;
}

:where(.list-group, .list-links) dt:first-child {
  border-start-start-radius: $list-group-inner-radius;
  border-start-end-radius: $list-group-inner-radius;
}

// List links
:where(.list-links a) {
  text-decoration: none;
  display: block;
  padding-block: $list-group-padding-block;
  padding-inline: $list-group-padding-inline;
}

:where(.list-links a:is(:hover, :focus)) {
  background-color: $list-links-background-hover;
}

:where(.list-links a:focus-visible) {
  outline: none;
}

:where(.list-links *:first-child a:is(:hover, :focus)) {
  border-start-start-radius: $list-group-inner-radius;
  border-start-end-radius: $list-group-inner-radius;
}

:where(.list-links *:last-child a:is(:hover, :focus)) {
  border-end-start-radius: $list-group-inner-radius;
  border-end-end-radius: $list-group-inner-radius;
}

// Ordered lists, inserts counter-increment to replace list-style-type.
:where(.list-group, .list-links) ol {
  counter-reset: ol-list;
}

:where(.list-group, .list-links):is(ol) li {
  counter-increment: ol-list;
}

:where(.list-group):is(ol) li:before {
  content: counter(ol-list) ". "; 
  margin-inline-end: 0.25rem;
}

:where(.list-links):is(ol) li a:before {
  content: counter(ol-list) ". "; 
  margin-inline-end: 0.25rem;
}

.list-group-light {
  color-scheme: light;
}

.list-group-dark {
  color-scheme: dark;
}

.list-links-light {
  color-scheme: light;
}

.list-links-dark {
  color-scheme: dark;
}

}
